---
swagger: "2.0"
info:
  description: "asdf"
  version: "1.0.0"
  title: "Start_App"
host: "virtserver.swaggerhub.com"
basePath: "/FJobs/Start_App/1.0.0"
tags:
- name: "jobs"
  description: "What you can do with your Jobs"
- name: "students"
  description: "Who can apply for jobs"
- name: "employers"
  description: "Who can C.R.U.D his jobs"
schemes:
- "https"
paths:
  /jobs:
    get:
      tags:
      - "job"
      description: "get all jobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Job"
    post:
      tags:
      - "job"
      summary: "Add a new job"
      operationId: "addJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Job object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Job"
      responses:
        200:
          description: "Job succesfully submitted"
        405:
          description: "Invalid input"
  /job/{jobId}:
    get:
      tags:
      - "job"
      summary: "Find Job by ID"
      operationId: "getJob"
      produces:
      - "application/json"
      parameters:
      - name: "jobId"
        in: "path"
        description: "Insert ID of the desired Job"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "succesfull operation"
          schema:
            $ref: "#/definitions/Job"
        405:
          description: "Invalid imput"
        404:
          description: "Job not found"
    put:
      tags:
      - "job"
      summary: "Update existing job"
      operationId: "updateJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobId"
        in: "path"
        description: "Job that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Update job object"
        required: true
        schema:
          $ref: "#/definitions/Job"
      responses:
        200:
          description: "Job succesfully updated"
        400:
          description: "Invalid ID"
        404:
          description: "Job not found"
    delete:
      tags:
      - "job"
      summary: "Delete a Job by ID"
      operationId: "deleteJob"
      produces:
      - "application/json"
      parameters:
      - name: "jobId"
        in: "path"
        description: "Insert ID of the Job to delete it"
        required: true
        type: "integer"
        format: "int64"
      responses:
        405:
          description: "Invalid imput"
        404:
          description: "Job not found"
  /student/{studentId}:
    get:
      tags:
      - "student"
      summary: "Find Student by ID"
      operationId: "getStudent"
      produces:
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "Insert ID of the Student"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "succesfull operation"
          schema:
            $ref: "#/definitions/Job"
        405:
          description: "Invalid imput"
        404:
          description: "Job not found"
    put:
      tags:
      - "student"
      description: "Update student info"
      operationId: "updateStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "Student that needs to update his info"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Update student object"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        201:
          description: "OK"
        404:
          description: "Student not found"
  /student/apply/job/{jobId}:
    put:
      tags:
      - "student"
      summary: "Apply for a Job"
      operationId: "applyJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobId"
        in: "path"
        description: "ID of job that you want to apply to"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated Student object"
        required: true
        schema:
          $ref: "#/definitions/Applicant' responses: 200: description: successful\
            \ operation 400: description: Invalid ID supplied 404: description: Job\
            \ not found\n/employer/{employerId}: put: tags: - employer description:\
            \ Update employer info operationId: updateEmployer parameters: - in: path\
            \ name: employerId description: Employer that needs update his info required:\
            \ true type: integer format: int64 - in: body name: body description:\
            \ Update employer object required: true schema: $ref: "
      responses:
        201:
          description: "OK"
        404:
          description: "Employer not found"
definitions:
  Job:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      title:
        type: "string"
      photo:
        type: "string"
      city:
        type: "string"
      address:
        type: "string"
      applicants:
        $ref: "#/definitions/Applicants"
      estimated_time:
        type: "integer"
      created_date:
        type: "string"
        format: "full-date"
      start_time:
        type: "string"
        format: "full-date"
      end_date:
        type: "string"
        format: "full-date"
      difficulty:
        type: "integer"
        format: "int32"
      reward:
        $ref: "#/definitions/Reward"
  Reward:
    type: "object"
    properties:
      value:
        type: "string"
      description:
        type: "string"
  Applicant:
    type: "object"
    properties:
      list:
        type: "array"
        items:
          $ref: "#/definitions/Student"
  Student:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      fname:
        type: "string"
      lname:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      rating:
        type: "integer"
        format: "int32"
      gender:
        type: "string"
        enum:
        - "Male"
        - "Female"
      city:
        type: "string"
      age:
        type: "integer"
        format: "int32"
      photo:
        type: "string"
      earned_skills:
        type: "string"
        enum:
        - "handy"
        - "smart"
        - "responsive"
  Employer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      fname:
        type: "string"
      lname:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      rating:
        type: "integer"
        format: "int32"
      gender:
        type: "string"
        enum:
        - "Male"
        - "Female"
      city:
        type: "string"
      address:
        type: "string"
      photo:
        type: "string"
